Git branching:
we can make multiple branches in git and in every branch, every developer can code independently from others.

by default, there is a branch called "main" in git
in early days, it was used to be called as "master" branch.

suppose there are 4 commit in main branch, your friend wants to work on a feature of the project

suppose client requested 2 features
- Feature A
- Feature B

you choose to work on "Feature B", your friend choose to work on "Feature A"
to do this in git, we can pull out new branches from the "main" branch

you can pull out your new branch named "feat/b" and commit independently from your friend
your friend can also pull out a new branch named "feat/a" to work on that particular feature independently from you.

suppose your friend completed "Feature A" work in 3 commits, now he can merge his own commits in a single "main" branch commit

you completed "Feature B" work in 2 commits, now you can merge your own commits in another single "main" branch commit

now suppose if another task "Feature C" comes, so we can create another branch named "feat/c" and perform work independently, after completion, we can merge the work again into a "main" branch commit

This is how teams work in collaboration.

In any development company organization, there is a "main" branch (name can vary in every company)

In main brach they put a lock (developers cannot directly work/commit on main branch)
because main branch is deployed on production(main) server, and if we make any mistake on main branch, it could lead to server errors

we tell users that whatever feature you would like to work on, you must pull out a branch from main to work on that feature independently with any errors

when he completes his work, in company, there is a review process conducted
if the review get passed, then we can merge it to the main branch 
this avoids crashing the server
if any feature gets merged to main branch, it will go directly to production, it's a ci/cd pipeline

in company, every developer can work independently like this with branches

git branch <branch-name>: create a new branch
git checkout <branch-name>: to enter into any particular branch